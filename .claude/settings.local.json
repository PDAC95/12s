{
  "permissions": {
    "allow": [
      "Bash(mkdir:*)",
      "Bash(npx create-next-app:*)",
      "Read(C:\\c\\dev\\12s\\web/**)",
      "Read(C:\\c\\dev\\12s\\web/**)",
      "Read(C:\\c\\dev\\12s\\web/**)",
      "Bash(npx @nestjs/cli new:*)",
      "Read(\\c\\dev\\12s/**)",
      "Read(\\c\\dev\\12s/**)",
      "Read(\\c\\dev\\12s/**)",
      "Read(C:\\c\\dev\\12s/**)",
      "Read(\\c\\dev\\12s/**)",
      "Bash(netstat:*)",
      "Read(\\c\\dev\\12s/**)",
      "Read(/C:\\dev\\12s/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend\\prisma/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Read(/C:\\dev\\12s\\backend\\src/**)",
      "Read(/C:\\dev\\12s\\backend/**)",
      "Bash(curl:*)",
      "Bash(tree:*)",
      "Bash(npm install:*)",
      "Bash(npx shadcn-ui@latest init:*)",
      "Bash(npx shadcn@latest init:*)",
      "Bash(npx tsc:*)",
      "Bash(npm ls:*)",
      "Bash(dir C:dev12sbackend)",
      "Bash(dir)",
      "Bash(npm run dev:*)",
      "Bash(start http://localhost:3001)",
      "Bash(if exist .next rmdir /s /q .next)",
      "Bash(start http://localhost:3002)",
      "Bash(ren:*)",
      "Bash(del \"C:\\dev\\12s\\web\\src\\app\\favicon.ico\")",
      "Bash(npm run build:*)",
      "Bash(npm run start:*)",
      "Bash(dir:*)",
      "Bash(ls:*)",
      "Bash(npx prisma migrate dev:*)",
      "Bash(npx prisma migrate diff:*)",
      "Bash(set PRISMA_MIGRATE_SKIP_GENERATE=true)",
      "Bash(npx prisma db push:*)",
      "Bash(npx prisma migrate reset:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"yes\" npx prisma migrate reset --force)",
      "Bash(npx prisma migrate:*)",
      "Bash(npx prisma generate:*)",
      "Bash(timeout 30 npx prisma generate)",
      "Bash(cat:*)",
      "Bash(taskkill:*)",
      "Bash(cmd /c:*)",
      "Bash(cd:*)",
      "Bash(start http://localhost:3002/feed)",
      "Bash(start http://localhost:3002/test-avatar)",
      "Bash(start http://localhost:3002/profile)",
      "Bash(start http://localhost:3000/feed)",
      "Bash(start http://localhost:3003/feed)",
      "Bash(findstr:*)",
      "Bash(start http://localhost:3000/play)",
      "Bash(start http://localhost:3002/challenge-friend)",
      "Bash(start http://localhost:3002/post-challenge)",
      "Bash(git init:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(start http://localhost:3002/play)",
      "Bash(start http://localhost:3002/login)",
      "Bash(git commit:*)",
      "Bash(git remote add:*)",
      "Bash(git pull:*)",
      "Bash(start http://localhost:3002/bets/create)",
      "Bash(start http://localhost:3002/challenge/create)",
      "Bash(find:*)",
      "Bash(npx prisma:*)",
      "Bash(start http://localhost:5555)",
      "Bash(node check-users.js)",
      "Bash(npx ts-node:*)",
      "Bash(if exist dist rmdir /s /q dist)",
      "Bash(del fix-user-coins.ts)",
      "Bash(git show:*)",
      "Bash(git stash:*)",
      "Bash(start http://localhost:3000/challenge-feed)",
      "Bash(start http://localhost:3005/api)",
      "Bash(start http://localhost:3003)",
      "Read(//c//**)",
      "WebSearch",
      "Bash(npx @upstash/context7-mcp:*)",
      "Bash(npx @executeautomation/playwright-mcp-server:*)",
      "Bash(npx mcp-server-git:*)",
      "Bash(npx @dkmaker/mcp-rest-api:*)",
      "Bash(npx @cyanheads/git-mcp-server:*)",
      "Bash(npx @modelcontextprotocol/server-puppeteer:*)",
      "Bash(npm run test:*)",
      "Bash(npm run test:e2e:*)",
      "Bash(npm run test:api:*)",
      "Bash(npx playwright:*)",
      "Bash(npx @upstash/context7-mcp@latest:*)",
      "Bash(npx dkmaker-mcp-rest-api:*)",
      "Bash(npx puppeteer-mcp-server:*)",
      "Bash(cp:*)",
      "WebFetch(domain:github.com)",
      "Bash(chrome-devtools-mcp:*)",
      "Bash(npx @prisma/mcp-server:*)",
      "Bash(npx @typescript/language-server-mcp:*)",
      "Bash(npm search:*)",
      "Bash(npx @modelcontextprotocol/server-filesystem:*)",
      "Bash(npm run start:dev:*)",
      "Bash(git submodule:*)",
      "Bash(git log:*)",
      "Bash(PRISMA_USER_CONSENT_FOR_DANGEROUS_AI_ACTION=\"si\" npx prisma migrate reset --force)",
      "Bash(node:*)",
      "Bash(start http://localhost:3001/friends)",
      "Bash(start http://localhost:3001/login)",
      "Bash(tasklist)",
      "Bash(timeout:*)",
      "WebFetch(domain:api.dicebear.com)",
      "Bash(start http://localhost:3002/friends)",
      "Bash(del C:dev12stest-avatar.js)",
      "Bash(start:*)"
    ],
    "deny": [],
    "ask": []
  },
  "enableAllProjectMcpServers": true
}